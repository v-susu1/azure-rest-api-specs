{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Snap To Roads Service",
    "version": "1.0",
    "description": "Azure Maps Snap to Roads  REST APIs"
  },
  "host": "atlas.microsoft.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "These are the [Azure Active Directory OAuth2](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-overview)  Flows. When paired with [Azure Role Based Access](https://docs.microsoft.com/en-us/azure/role-based-access-control/overview)  control it can be used to control access to Azure Maps REST APIs. Azure Role based access controls are used to designate access to one or more Azure Maps resource account or sub-resources. Any user, group, or service principal can be granted access via a  built in role or a custom role composed of one or more permissions to Azure Maps REST APIs.\n\nTo implement scenarios we recommend viewing [authentication concepts](https://aka.ms/amauth). In summary, this security definition provides a solution  for modeling application(s) via objects capable of access control on specific APIs and scopes.\n\n#### Note\n* This security definition **requires** the use of the `x-ms-client-id` header to indicate which Azure Maps resource the application is requesting access to.  This can be acquired from the [Maps management API](https://aka.ms/amauthdetails).\n* The `Authorization URL` is specific to the Azure public cloud instance. Sovereign clouds have unique Authorization URLs and Azure Active directory configurations. \n* The Azure role based access control is configured from the [Azure management plane](https://aka.ms/amrbac) via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs.\n* Usage of the [Azure Maps Web SDK](https://aka.ms/amaadmc) allows for configuration based setup of an application for multiple use cases.\n* Currently Azure Active Directory [v1.0](https://docs.microsoft.com/en-us/azure/active-directory/develop/azure-ad-endpoint-comparison) tokens are supported.",
      "scopes": {
        "user_impersonation": "Impersonates a user's Azure Active Directory account."
      }
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "description": "This is a shared key which is provisioned when creating an [Azure Maps resource](https://aka.ms/amauth) through the Azure management plane  via Azure portal, Powershell, CLI, Azure SDKs, or REST APIs. With this key, any application is authorized to access  all REST APIs. In other words, these can currently be treated as master keys to the account which they are issued for.  For publicly exposed applications our recommendation is to use server to server access of Azure Maps REST APIs where this key can be  securely stored.",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "azure_auth": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "responses": {
    "202": {
      "description": "Request Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.",
      "headers": {
        "Location": {
          "type": "string",
          "description": "New URL to check for the results of the long running process."
        }
      }
    },
    "400": {
      "description": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "401": {
      "description": "Access denied due to invalid subscription key or invalid Azure Active Directory bearer token.  Make sure to provide a valid key for an active Azure subscription and Maps resource.  Otherwise, verify the [WWW-Authenticate](https://tools.ietf.org/html/rfc6750#section-3.1) header for error code and description of the provided AAD bearer token.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      },
      "headers": {
        "WWW-Authenticate": {
          "type": "string",
          "description": "Bearer realm=\"https://atlas.microsoft.com/\", error=\"invalid_token\", error_description=\"The access token expired\""
        }
      }
    },
    "403": {
      "description": "Permission, capacity, or authentication issues.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "404": {
      "description": "Not Found: the requested resource could not be found, but it may be available again in the future.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "500": {
      "description": "An error occurred while processing the request. Please try again later.",
      "schema": {
        "$ref": "#/definitions/ODataErrorResponse"
      }
    },
    "202Async": {
      "description": "**Supported only for async request.**\nRequest Accepted: The request has been accepted for processing. Please use the URL in the Location Header to retry or access the results.",
      "headers": {
        "Location": {
          "type": "string",
          "description": "New URL to check for the results of the long running process."
        }
      }
    }
  },
  "parameters": {
    "ClientId": {
      "name": "x-ms-client-id",
      "description": "Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following [articles](https://aka.ms/amauthdetails) for guidance.",
      "type": "string",
      "in": "header",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "SubscriptionKey": {
      "name": "subscription-key",
      "description": "One of the Azure Maps keys provided from an Azure Map Account. Please refer to this [article](https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication) for details on how to manage authentication.",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API. Current version is 1.0",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "1.0",
      "x-ms-parameter-location": "client"
    },
    "Query": {
      "name": "query",
      "in": "query",
      "description": "Specifies the semicolon-separated list of coordinates. Each coordinate has to be comma-separated and calculated using EPSG4326 projection.The maximum allowed number of coordinates is **100** while the the minimum is **1**.",
      "required": true,
      "type": "string"
    },
    "Headings": {
      "name": "headings",
      "in": "query",
      "description": "A semicolon-separated list indicating the direction of movement. If provided, the heading will be taken into account by the map matching algorithm. The number of headings must be the same as the number of coordinates.\n The heading value is represented in degrees, 0 is North, 90 is East, etc.",
      "required": false,
      "type": "string"
    },
    "SnapToRoadsResponseFields": {
      "name": "fields",
      "in": "query",
      "description": "The fields to be included in the response, nested as in the response schema.\n\n * In order to obtain all data, it is necessary to place the whole object in the query (see below).\n * An empty object (empty { }) in a fields string is treated as a malformed request.\n\n Value needed to obtain all data: {projectedPoints{type,geometry{type,coordinates},properties{routeIndex}},route{type,geometry{type,coordinates},properties{id,speedRestrictions{maximumSpeed{value,unit}},address{roadName,roadNumbers},frc,formOfWay,roadUse,laneInfo{numberOfLanes}}},totalDistance}",
      "required": false,
      "type": "string",
      "default": "{route{geometry{coordinates}}}"
    },
    "RoadSegmentResponseFields": {
      "name": "fields",
      "in": "query",
      "description": "The fields to be included in the response, nested as in the response schema.\n\n * In order to obtain all data, it is necessary to place the whole object in the query (see below).\n * An empty object (empty { }) in a fields string is treated as a malformed request.\n\n Value needed to obtain all data: {projectedPoints{type,geometry{type,coordinates},properties{roadElements{index}}},roadElements{type,geometry{type,coordinates},properties{id,speedRestrictions{maximumSpeed{value,unit}},address{roadName,roadNumbers},frc,formOfWay,roadUse,laneInfo{numberOfLanes}}}}",
      "required": false,
      "type": "string",
      "default": "{projectedPoints{geometry{coordinates}}}"
    },
    "VehicleType":{
      "name": "vehicleType",
      "in": "query",
      "description": "It can contribute to a more accurate road identification by possibly excluding roads which are not suited for a given value.",
      "required": false,
      "type": "string",
      "enum": ["PassengerCar", "Bus", "Truck"],
      "default": "PassengerCar"
    }
  },
  "paths": {
    "/snap-to-roads/snap-to-roads": {
      "get": {
        "x-publish": true,
        "description": "**Reconstructing a driven road and getting the detailed insights by received coordinates**\n\n**Applies to**: S0 and S1 pricing tiers.\n\n\n The endpoint received coordinates to reconstruct the driven road. Coordinates given as input are related to themselves and are a part of the same route.\n The matching algorithm chooses the driven road fitting to all of the given points and takes into account additional restrictions provided by the client.",
        "operationId": "SnapToRoads_GetSnapToRoads",
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/Query"
          },
          {
            "$ref": "#/parameters/Headings"
          },
          {
            "$ref": "#/parameters/SnapToRoadsResponseFields"
          },
          {
            "$ref": "#/parameters/VehicleType"
          }
        ]
      }
    },
    "/snap-to-roads/road-segment": {
      "get": {
        "x-publish": true,
        "description": "**Getting the detailed insights for a road's segment or a set of segments by received coordinates**\n\n**Applies to**: S0 and S1 pricing tiers.\n\n\n The endpoint received matches the received coordinates to the map road network. Coordinates given as input to the Road Segment API can be unrelated to themselves and don't have to be a part of the same route. The matching algorithm chooses the closest road and takes into account additional restrictions provided by the client.",
        "operationId": "SnapToRoads_RoadSegment",
        "parameters": [
          {
            "$ref": "#/parameters/ClientId"
          },
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/Query"
          },
          {
            "$ref": "#/parameters/Headings"
          },
          {
            "$ref": "#/parameters/RoadSegmentResponseFields"
          },
          {
            "$ref": "#/parameters/VehicleType"
          }
        ]
      }
    }
  },
  "definitions": {
    "ODataErrorResponse": {
      "type": "object",
      "description": "This response object is returned when an error occurs in the Maps API.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError"
        }
      }
    },
    "ODataError": {
      "type": "object",
      "description": "This object is returned when an error occurs in the Maps API.",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The ODataError code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "If available, a human readable description of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          }
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "If available, the target causing the error."
        }
      }
    }
  }
}
